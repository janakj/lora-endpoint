{
    "extends": ["airbnb-base", "prettier", "plugin:import/typescript"],
    "plugins": ["@typescript-eslint"],
    "parser": "@typescript-eslint/parser",
    "globals": {
      "BigInt": true
    },
    "env": {
      "node": true,
      "es6": true
    },
    "rules": {
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "warn",
      "no-useless-constructor": "off",
      "@typescript-eslint/no-useless-constructor": "error",
      "one-var": "off",
      "camelcase": "off",
      "object-shorthand": "warn",
      "lines-between-class-members": "off",
      "func-names": "off",
      "import/extensions": "off",
      "no-multi-spaces": "off",
      "comma-dangle": "off",
      "key-spacing": "off",
      "quotes": "off",
      "no-plusplus": "off",
      "import/prefer-default-export": "off",
      "no-underscore-dangle": "off",
      "prefer-destructuring": "off",
      "no-console": "warn",
      "max-classes-per-file": "off",
      "no-await-in-loop": "off",
      "no-continue": "off",
      "no-param-reassign": "warn",
      "no-restricted-syntax": ["error", {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      }, {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      }, {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }]
    }
}
